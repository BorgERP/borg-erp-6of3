=== modified file 'account_voucher/account_voucher.py'
--- account_voucher/account_voucher.py	2012-08-28 10:58:11 +0000
+++ account_voucher/account_voucher.py	2012-11-19 09:47:22 +0000
@@ -336,41 +336,32 @@
         if context is None: context = {}
 
         for voucher in voucher_pool.browse(cr, uid, ids, context=context):
-            voucher_amount = 0.0
-            for line in voucher.line_ids:
-                voucher_amount += line.untax_amount or line.amount
-                line.amount = line.untax_amount or line.amount
-                voucher_line_pool.write(cr, uid, [line.id], {'amount':line.amount, 'untax_amount':line.untax_amount})
-
-            if not voucher.tax_id:
-                self.write(cr, uid, [voucher.id], {'amount':voucher_amount, 'tax_amount':0.0})
-                continue
-
             tax = [tax_pool.browse(cr, uid, voucher.tax_id.id, context=context)]
             partner = partner_pool.browse(cr, uid, voucher.partner_id.id, context=context) or False
             taxes = position_pool.map_tax(cr, uid, partner and partner.property_account_position or False, tax)
             tax = tax_pool.browse(cr, uid, taxes, context=context)
-
-            total = voucher_amount
+            voucher_amount = 0.0
+            for line in voucher.line_ids:
+                untax_amount = 0.0
+                if tax and line.amount:
+                    tax_computed = tax_pool.compute_all(cr, uid, tax, line.amount, 1)
+                    untax_amount = tax_computed.get('total', 0.0)
+                voucher_amount += line.amount
+                voucher_line_pool.write(cr, uid, [line.id], {'untax_amount': untax_amount or line.amount})
+
+            if not voucher.tax_id:
+                self.write(cr, uid, [voucher.id], {'amount': voucher_amount, 'tax_amount':0.0})
+                continue
+
             total_tax = 0.0
-
-            if not tax[0].price_include:
-                for tax_line in tax_pool.compute_all(cr, uid, tax, voucher_amount, 1).get('taxes', []):
-                    total_tax += tax_line.get('amount', 0.0)
-                total += total_tax
-            else:
-                for line in voucher.line_ids:
-                    line_total = 0.0
-                    line_tax = 0.0
-
-                    for tax_line in tax_pool.compute_all(cr, uid, tax, line.untax_amount or line.amount, 1).get('taxes', []):
-                        line_tax += tax_line.get('amount', 0.0)
-                        line_total += tax_line.get('price_unit')
-                    total_tax += line_tax
-                    untax_amount = line.untax_amount or line.amount
-                    voucher_line_pool.write(cr, uid, [line.id], {'amount':line_total, 'untax_amount':untax_amount})
-
-            self.write(cr, uid, [voucher.id], {'amount':total, 'tax_amount':total_tax})
+            tax_computed = tax_pool.compute_all(cr, uid, tax, voucher_amount, 1)
+            for tax_line in tax_computed.get('taxes', []):
+                total_tax += tax_line.get('amount', 0.0)
+            voucher_amount = tax_computed.get('total_included', 0.0) or voucher_amount
+            self.write(cr, uid, [voucher.id], {
+                    'amount': voucher_amount,
+                    'tax_amount': total_tax,
+                    })
         return True
 
     def onchange_price(self, cr, uid, ids, line_ids, tax_id, partner_id=False, context=None):
@@ -401,10 +392,10 @@
                 taxes = position_pool.map_tax(cr, uid, partner and partner.property_account_position or False, tax)
                 tax = tax_pool.browse(cr, uid, taxes, context=context)
 
-            if not tax[0].price_include:
-                for tax_line in tax_pool.compute_all(cr, uid, tax, voucher_total, 1).get('taxes', []):
-                    total_tax += tax_line.get('amount')
-                total += total_tax
+            tax_computed = tax_pool.compute_all(cr, uid, tax, voucher_total, 1)
+            for tax_line in tax_computed.get('taxes', []):
+                total_tax += tax_line.get('amount', 0.0)
+            total = tax_computed.get('total_included', 0.0)
 
         res.update({
             'amount':total or voucher_total,
@@ -1010,7 +1001,6 @@
         move_line_obj = self.pool.get('account.move.line')
         currency_obj = self.pool.get('res.currency')
         tax_obj = self.pool.get('account.tax')
-        tot_line = line_total
         rec_lst_ids = []
 
         voucher_brw = self.pool.get('account.voucher').browse(cr, uid, voucher_id, context)
@@ -1050,10 +1040,8 @@
                     line.type = 'dr'
 
             if (line.type=='dr'):
-                tot_line += amount
                 move_line['debit'] = amount
             else:
-                tot_line -= amount
                 move_line['credit'] = amount
 
             if voucher_brw.tax_id and voucher_brw.type in ('sale', 'purchase'):
@@ -1122,6 +1110,7 @@
             if line.move_line_id.id:
                 rec_lst_ids.append(rec_ids)
 
+        tot_line = self.pool.get('account.move')._compute_balance(cr, uid, move_id, context=context)
         return (tot_line, rec_lst_ids)
 
     def writeoff_move_line_get(self, cr, uid, voucher_id, line_total, move_id, name, company_currency, current_currency, context=None):
@@ -1198,6 +1187,7 @@
             context = {}
         move_pool = self.pool.get('account.move')
         move_line_pool = self.pool.get('account.move.line')
+        self.compute_tax(cr, uid, ids, context=context)
         for voucher in self.browse(cr, uid, ids, context=context):
             if voucher.move_id:
                 continue
@@ -1215,12 +1205,10 @@
             # Create the first line of the voucher
             move_line_id = move_line_pool.create(cr, uid, self.first_move_line_get(cr,uid,voucher.id, move_id, company_currency, current_currency, context), context)
             move_line_brw = move_line_pool.browse(cr, uid, move_line_id, context=context)
-            line_total = move_line_brw.debit - move_line_brw.credit
             rec_list_ids = []
-            if voucher.type == 'sale':
-                line_total = line_total - self._convert_amount(cr, uid, voucher.tax_amount, voucher.id, context=ctx)
-            elif voucher.type == 'purchase':
-                line_total = line_total + self._convert_amount(cr, uid, voucher.tax_amount, voucher.id, context=ctx)
+            balance = move_line_brw.debit - move_line_brw.credit
+            sign = balance / abs(balance)
+            line_total = sign * self._convert_amount(cr, uid, voucher.amount, voucher.id, context=ctx)
             # Create one move line per voucher line where amount is not 0.0
             line_total, rec_list_ids = self.voucher_move_line_create(cr, uid, voucher.id, line_total, move_id, company_currency, current_currency, context)
 
